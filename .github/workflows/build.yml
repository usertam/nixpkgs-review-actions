name: "Run nixpkgs-review"
run-name: "Review on ${{github.event.inputs.patch-repo}}/${{github.event.inputs.patch-ref}}"
on:
  workflow_dispatch:
    inputs:
      patch-repo:
        description: Patch repository
        required: true
        default: 'usertam/nixpkgs'
      patch-ref:
        description: Patch branch (or ref)
        required: true
        default: 'patch/'
      patch-depth:
        description: Patch branch fetch depth
        required: true
        default: 0
      base-ref:
        description: Base branch (or ref) in nixpkgs
        required: true
        default: 'master'
      base-depth:
        description: Base branch fetch depth
        required: true
        default: 0
      extra-args:
        description: Extra arguments to nixpkgs-review, e.g. --build-args '--print-build-logs --relaxed-sandbox' --extra-nixpkgs-config '{ allowUnfree = true; permittedInsecurePackages = [ ]; }'
        default: "--build-args '--print-build-logs '"
jobs:
  review:
    name: Review on ${{matrix.system}}
    strategy:
      matrix:
        include:
        - system: x86_64-linux
          runs-on: ubuntu-latest
        - system: aarch64-linux
          runs-on: ubuntu-24.04-arm
        - system: x86_64-darwin
          runs-on: macos-13
        - system: aarch64-darwin
          runs-on: macos-latest
      fail-fast: false
    runs-on: ${{matrix.runs-on}}
    steps:
    - uses: actions/checkout@main
      with:
        repository: ${{github.event.inputs.patch-repo}}
        ref: ${{github.event.inputs.patch-ref}}
        fetch-depth: ${{github.event.inputs.patch-depth}}
    - uses: DeterminateSystems/nix-installer-action@main
    - name: Fetch upstream nixpkgs base
      run: |
        git remote add upstream https://github.com/NixOS/nixpkgs.git
        if [ "${{ github.event.inputs.base-depth }}" -gt 0 ]; then
          git fetch upstream ${{github.event.inputs.base-ref}} --depth=${{github.event.inputs.base-depth}}
        else
          git fetch upstream ${{github.event.inputs.base-ref}}
        fi
    - name: Set up github-actions name and email
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    - name: Set up swap space
      uses: pierotofy/set-swap-space@master
      if: runner.os == 'Linux'
      with:
        swap-size-gb: 16
    - name: Run nixpkgs-review
      run: |
        nix run .#nixpkgs-review -- rev -b ${{github.event.inputs.base-ref}} HEAD \
          --print-result ${{github.event.inputs.extra-args}} | tee ${{matrix.system}}.report.tmp
    - name: Report
      run: |
        grep -vE '\$ |HEAD is|Local eval' ${{matrix.system}}.report.tmp | \
          perl -e "print reverse(<>)" | sed -n '/<\/details>/,/## `nixpkgs-review` result/p' | perl -e "print reverse(<>)" > ${{matrix.system}}.report
        echo -n '::notice::%0A'
        sed 'H;1h;$!d;x;s/\n/%0A/g' ${{matrix.system}}.report
    - name: Upload review
      uses: actions/upload-artifact@main
      with:
        name: ${{matrix.system}}
        path: ${{matrix.system}}.report
  summary:
    name: Generate summary report
    needs: review
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@main
      with:
        merge-multiple: true
    - name: Write summary report
      run: |
        sed -n '/## /,$p' x86_64-linux.report | sed '/---/d' | tee all.report
        if grep -q 'x86_64-linux' all.report; then
          echo | tee -a all.report;
        fi
        sed -n '/### /,$p' aarch64-linux.report | tee -a all.report
        if grep -q 'aarch64-linux' all.report; then
          echo | tee -a all.report;
        fi
        sed -n '/### /,$p' x86_64-darwin.report | tee -a all.report
        if grep -q 'x86_64-darwin' all.report; then
          echo | tee -a all.report;
        fi
        sed -n '/### /,$p' aarch64-darwin.report | tee -a all.report
        if ! grep -q '[^[:space:]]' all.report; then
          echo "Nothing to report." > all.report
        fi
    - name: Display summary report
      run: |
        cat <<EOF > $GITHUB_STEP_SUMMARY
        ## Review configuration
        <table>
            <tr>
                <th></th>
                <th>Repository</th>
                <th>Branch/Reference</th>
                <th>Depth</th>
            </tr>
            <tr>
                <td>Patch</td>
                <td>${{github.event.inputs.patch-repo}}</td>
                <td>${{github.event.inputs.patch-ref}}</td>
                <td>${{github.event.inputs.patch-depth}}</td>
            </tr>
            <tr>
                <td>Base</td>
                <td>NixOS/nixpkgs</td>
                <td>${{github.event.inputs.base-ref}}</td>
                <td>${{github.event.inputs.base-depth}}</td>
            </tr>
            <tr>
                <td>Arguments</td>
                <td colspan="3"><code>${{github.event.inputs.extra-args}}</code></td>
            </tr>
        </table>

        ### Rendered

        $(cat all.report)

        ### Raw

        \`\`\`
        $(cat all.report)
        \`\`\`
        EOF
